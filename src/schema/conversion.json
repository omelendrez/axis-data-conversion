[
  {
    "destinationTableName": "state",
    "isDone": false,
    "insert": "INSERT INTO state (name) VALUES ?",
    "records": [
      [
        "- Foreigner -"
      ]
    ]
  },
  {
    "destinationTableName": "status",
    "isDone": false,
    "drop": "DROP TABLE IF EXISTS status;",
    "create": "CREATE TABLE status (id TINYINT NOT NULL AUTO_INCREMENT, status VARCHAR(45) NOT NULL, state VARCHAR(45) NOT NULL, continue_flow TINYINT, PRIMARY KEY (id));",
    "insert": "INSERT INTO status VALUES ?",
    "records": [
      [
        1,
        "Admin done",
        "Waiting for Front desk",
        1
      ],
      [
        2,
        "Front desk done",
        "Waiting for Medic",
        1
      ],
      [
        3,
        "Medic done",
        "Waiting for T.C.",
        1
      ],
      [
        4,
        "T.C. done",
        "Waiting for Assesment",
        1
      ],
      [
        5,
        "Assesment done",
        "Waiting to QA/QC",
        1
      ],
      [
        6,
        "QA/QC done",
        "Waiting for Finance",
        1
      ],
      [
        7,
        "Finance done",
        "Waiting for MD",
        1
      ],
      [
        8,
        "MD done",
        "Waiting for Printer",
        1
      ],
      [
        9,
        "Certificate done",
        "Waiting for Opito",
        1
      ],
      [
        10,
        "ID done",
        "Waiting for Opito",
        1
      ],
      [
        11,
        "Completed",
        "Completed",
        0
      ],
      [
        12,
        "Cancelled",
        "Cancelled",
        0
      ]
    ]
  },
  {
    "destinationTableName": "title",
    "isDone": false,
    "drop": "DROP TABLE IF EXISTS title;",
    "create": "CREATE TABLE title (id TINYINT NOT NULL AUTO_INCREMENT, name VARCHAR(10) NOT NULL, PRIMARY KEY (id));",
    "insert": "INSERT INTO title VALUES ?",
    "records": [
      [
        1,
        "Mr."
      ],
      [
        2,
        "Mrs."
      ],
      [
        3,
        "Miss"
      ],
      [
        4,
        "Dr."
      ],
      [
        5,
        "Ms."
      ],
      [
        6,
        "Prof."
      ],
      [
        7,
        "Rev."
      ]
    ]
  },
  {
    "sourceTableName": "empTraining",
    "destinationTableName": "tracking",
    "isDone": false,
    "isInsert": true,
    "drop": "DROP TABLE IF EXISTS tracking;",
    "create": "CREATE TABLE tracking (id INT NOT NULL AUTO_INCREMENT, training INT, status TINYINT NOT NULL, user SMALLINT, updated DATETIME DEFAULT NOW(), PRIMARY KEY (id));",
    "index": "ALTER TABLE tracking ADD INDEX tracking_training_status_idx (training ASC, status ASC) VISIBLE;",
    "insert": "INSERT INTO tracking (training, status, user, updated) VALUES ?",
    "fields": [
      {
        "date": "Updated",
        "user": "UpdatedBy",
        "status": 1
      },
      {
        "date": "ApprovedOn",
        "user": "ApprovedBy",
        "status": 8
      },
      {
        "date": "Certificate_printedOn",
        "user": "Certificate_printedBy",
        "status": 9
      },
      {
        "date": "ID_issuedOn",
        "user": "ID_issuedBy",
        "status": 10
      }
    ]
  },
  {
    "title": "Updated learner companies",
    "isDone": false,
    "isUpdate": true,
    "steps": [
      "UPDATE learner SET company='0000' WHERE company NOT IN (SELECT code FROM company);"
    ]
  },
  {
    "title": "Secure passwords",
    "isDone": false,
    "isSecure": true,
    "fnCreate": "CREATE FUNCTION IF NOT EXISTS decrypt (crypted CHAR(100)) RETURNS CHAR(100) DETERMINISTIC BEGIN DECLARE pos DECIMAL DEFAULT 1;DECLARE pwd CHAR(100) DEFAULT '';WHILE pos <= LENGTH(crypted) DO SET pwd = CONCAT(pwd,CHAR(CONVERT(substring(crypted, pos, 3), DECIMAL)));SET pos = pos+3;END WHILE;return LOWER(pwd);END;",
    "query": "SELECT id, decrypt(password) password FROM user WHERE LENGTH(TRIM(password))>0;",
    "update": "UPDATE user SET password = ? WHERE id = ?",
    "fnDrop": "DROP FUNCTION IF EXISTS decrypt;"
  },
  {
    "destinationTableName": "role",
    "isDone": false,
    "drop": "DROP TABLE IF EXISTS role;",
    "create": "CREATE TABLE role (id SMALLINT NOT NULL AUTO_INCREMENT, name VARCHAR(45) NOT NULL,PRIMARY KEY (id));",
    "insert": "INSERT INTO role VALUES ?",
    "records": [
      [
        1,
        "System Admin"
      ],
      [
        2,
        "Admin"
      ],
      [
        3,
        "Front desk"
      ],
      [
        4,
        "Finance"
      ],
      [
        5,
        "Medic"
      ],
      [
        6,
        "T.C."
      ],
      [
        7,
        "Instructor"
      ],
      [
        8,
        "QA/QC"
      ],
      [
        9,
        "MD"
      ],
      [
        10,
        "Printer"
      ]
    ]
  }
]
