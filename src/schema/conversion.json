[
  {
    "destinationTableName": "status",
    "isDone": true,
    "drop": "DROP TABLE IF EXISTS status;",
    "create": "CREATE TABLE status (id TINYINT NOT NULL AUTO_INCREMENT, state VARCHAR(45) NOT NULL, status VARCHAR(45) NOT NULL, continue_flow TINYINT, PRIMARY KEY (id));",
    "insert": "INSERT INTO status VALUES ?",
    "records": [
      [
        1,
        "Admin done",
        "Waiting for Front desk",
        1
      ],
      [
        2,
        "Frond desk done",
        "Waiting for Medic",
        1
      ],
      [
        3,
        "Medic done",
        "Waining for Training Coordinator",
        1
      ],
      [
        4,
        "Training Coordinator done",
        "Waiting for Assesment",
        1
      ],
      [
        5,
        "Assesment done",
        "Waining to QC",
        1
      ],
      [
        6,
        "QC done",
        "Waiting for MD",
        1
      ],
      [
        7,
        "MD done",
        "Wating for Printing",
        1
      ],
      [
        8,
        "Certificate printing done",
        "Waiting for Opito Transfer Letter",
        1
      ],
      [
        9,
        "ID printing done",
        "Waiting for Opito Transfer Letter",
        1
      ],
      [
        10,
        "Completed",
        "Completed",
        0
      ],
      [
        11,
        "Training Cancelled",
        "Cancelled",
        0
      ]
    ]
  },
  {
    "sourceTableName": "empTraining",
    "destinationTableName": "tracking",
    "isDone": true,
    "isInsert": true,
    "drop": "DROP TABLE IF EXISTS tracking;",
    "create": "CREATE TABLE tracking (id INT NOT NULL AUTO_INCREMENT, training INT, status TINYINT NOT NULL, user SMALLINT, updated DATETIME, PRIMARY KEY (id));",
    "index": "ALTER TABLE tracking ADD INDEX tracking_training_idx (training ASC) VISIBLE;ALTER TABLE tracking ADD INDEX tracking_updated_idx (updated ASC) VISIBLE;",
    "insert": "INSERT INTO tracking (training, status, user, updated) VALUES ?",
    "fields": [
      {
        "date": "ApprovedOn",
        "user": "ApprovedBy",
        "status": 7
      },
      {
        "date": "Certificate_printedOn",
        "user": "Certificate_printedBy",
        "status": 8
      },
      {
        "date": "ID_printedOn",
        "user": "ID_printedBy",
        "status": 9
      }
    ]
  },
  {
    "title": "Updated trainee companies",
    "isDone": true,
    "isUpdate": true,
    "steps": [
      "UPDATE trainee SET company='0000' WHERE company NOT IN (SELECT code FROM company);"
    ]
  },
  {
    "title": "Updated training trackings",
    "isDone": true,
    "isUpdate": true,
    "steps": [
      "DROP TABLE IF EXISTS tracking2",
      "CREATE TABLE tracking2 SELECT 'training', 'status', 'user', 'updated' FROM tracking t WHERE 'updated'=(SELECT MAX('updated') FROM tracking t2 WHERE t2.training=t.training);",
      "UPDATE training t INNER JOIN tracking2 t2 on t2.training=t.id SET t.status=t2.status, user=t2.user, updated=t2.updated;",
      "UPDATE training SET status=10 WHERE id IN (SELECT id FROM opito);",
      "DROP TABLE IF EXISTS tracking2"
    ]
  },
  {
    "title": "Secure passwords",
    "isDone": true,
    "isSecure": true,
    "fnCreate": "CREATE FUNCTION IF NOT EXISTS decrypt (crypted CHAR(100)) RETURNS CHAR(100) DETERMINISTIC BEGIN DECLARE pos DECIMAL DEFAULT 1;DECLARE pwd CHAR(100) DEFAULT '';WHILE pos <= LENGTH(crypted) DO SET pwd = CONCAT(pwd,CHAR(CONVERT(substring(crypted, pos, 3), DECIMAL)));SET pos = pos+3;END WHILE;return LOWER(pwd);END;",
    "query": "SELECT id, decrypt(password) password FROM user WHERE LENGTH(TRIM(password))>0;",
    "update": "UPDATE user SET password = ? WHERE id = ?",
    "fnDrop": "DROP FUNCTION IF EXISTS decrypt;"
  },
  {
    "destinationTableName": "role",
    "isDone": true,
    "drop": "DROP TABLE IF EXISTS role;",
    "create": "CREATE TABLE role (id SMALLINT NOT NULL AUTO_INCREMENT, name VARCHAR(45) NOT NULL,PRIMARY KEY (id));",
    "insert": "INSERT INTO role VALUES ?",
    "records": [
      [
        1,
        "System Admin"
      ],
      [
        2,
        "Admin user"
      ],
      [
        3,
        "Frond desk"
      ],
      [
        4,
        "Finance"
      ],
      [
        5,
        "Medic"
      ],
      [
        6,
        "Training Coordinator"
      ],
      [
        7,
        "Instructor"
      ],
      [
        8,
        "QC"
      ],
      [
        9,
        "MD"
      ],
      [
        10,
        "Printer"
      ]
    ]
  }
]
